---

- name: Ensure Matrix jitsi-prosody environment exists
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: 0777
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - {path: "{{ matrix_jitsi_prosody_base_path }}", when: true}
    - {path: "{{ matrix_jitsi_prosody_config_path }}", when: true}
    - {path: "{{ matrix_jitsi_prosody_plugins_path }}", when: true}
  when: item.when | bool

- name: Ensure jitsi-prosody Docker image is pulled
  community.docker.docker_image:
    name: "{{ matrix_jitsi_prosody_docker_image }}"
    source: "{{ 'pull' if ansible_version.major > 2 or ansible_version.minor > 7 else omit }}"
    force_source: "{{ matrix_jitsi_prosody_docker_image_force_pull if ansible_version.major > 2 or ansible_version.minor >= 8 else omit }}"
    force: "{{ omit if ansible_version.major > 2 or ansible_version.minor >= 8 else matrix_jitsi_prosody_docker_image_force_pull }}"
  register: result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: result is not failed

- name: Ensure jitsi-prosody environment variables file is created
  ansible.builtin.template:
    src: "{{ role_path }}/templates/prosody/env.j2"
    dest: "{{ matrix_jitsi_prosody_base_path }}/env"
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
    mode: 0640

- name: Ensure matrix-jitsi-prosody.service file is installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/prosody/matrix-jitsi-prosody.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/matrix-jitsi-prosody.service"
    mode: 0644
  register: matrix_jitsi_prosody_systemd_service_result

- name: Ensure authentication is properly configured
  ansible.builtin.include_tasks:
    file: "{{ role_path }}/tasks/util/setup_jitsi_auth.yml"
  when: matrix_jitsi_enable_auth | bool
