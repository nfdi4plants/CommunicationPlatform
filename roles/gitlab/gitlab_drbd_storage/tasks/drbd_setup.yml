

- name: Ensure of preconfinguration of DRBD with Pacemaker
  block:
  - ansible.builtin.include_tasks: "{{ role_path }}/tasks/drbd_presetup.yml"  
  tags:
  - setup-all
  - install-all


- name: Add linbit-drbd9 stable repository from PPA and install its signing key on Ubuntu target
  ansible.builtin.apt_repository:
    repo: ppa:linbit/linbit-drbd9-stack
  tags:
  - setup-all
  - install-all

- name: Install the Pacemaker & DRBD9 packages 
  ansible.builtin.apt:
    pkg:
    - drbd-utils=9.25.0-1ppa1~jammy1
    - drbd-dkms=9.2.5-1ppa1~jammy1
    - pacemaker=2.1.2-1ubuntu3.1
    - pcs=0.10.11-2ubuntu3
    - resource-agents=1:4.7.0-1ubuntu7.2
  tags:
  - setup-all
  - install-all


- name: Ensure DRBD configuration is configured
  ansible.builtin.template:
    src: "{{ role_path }}/templates/drbd.conf.j2"
    dest: "/etc/drbd.conf"
    mode: 0644
  tags:
    - new_storage

- name:  NFS server should stop for new_storage
  ansible.builtin.systemd:
    name:  nfs-kernel-server.service
    state: stopped
    enabled: true
  register: NFS_service_status
  when: inventory_hostname in groups["drbd_primary"]
  tags:
    - new_storage

- name: Pacemaker cluster stop for new storage configuration
  shell: "pcs cluster  stop --all"
  register: pcs_stop_new_storage
  when: inventory_hostname in groups["drbd_primary"]
  ignore_errors: true
  tags:
    - new_storage
  


- name: Drbdadm create-md for first time
  shell: "drbdadm create-md r0_gitlab --force"
  register: drbdadm_create_md
  tags:
    - new_storage


- name: Drbdadm up for first time
  shell: " drbdadm up r0_gitlab"
  register: drbdadm_up_msg
  tags:
    - new_storage


- name: drbdsetup new-current-uuid for first time
  shell: "sudo drbdsetup new-current-uuid --clear-bitmap 1"
  register: drbdsetup_new_storage
  when: inventory_hostname in groups["drbd_primary"]
  tags:
    - new_storage

- name: drbdadm primary for first time
  shell: "sudo drbdadm primary  r0_gitlab"
  register: drbdadm_primary_server_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
    - new_storage

- name: Create a xfs filesystem on '/dev/drbd1'
  community.general.filesystem:
    fstype: xfs
    dev: /dev/drbd1
  when: inventory_hostname in groups["drbd_primary"]
  tags:
    - new_storage

- name: Drbdadm status
  shell: " drbdadm status r0_gitlab"
  register: drbdadm_status_msg
  tags:
    - new_storage

- name: Drbdadm down
  shell: " drbdadm down r0_gitlab"
  register: drbdadm_down_msg
  tags:
    - new_storage


- name: Change  password of user hacluster
  user:
    name: hacluster
    password: "{{ hacluster_password |password_hash('sha512') }}"
  tags:
  - setup-all
  - install-all

- ansible.builtin.set_fact:
    pacemaker_cluster_list: "{{hostvars[groups['drbd_primary'][0]]['inventory_hostname']}} {% for item in groups['drbd_secondary'] %} {{hostvars[item]['inventory_hostname']}} {% endfor %}" 
  tags:
  - setup-all
  - install-all
 
- name: Pcs host auth
  shell: "pcs host auth {{pacemaker_cluster_list}} -u hacluster -p {{hacluster_password}}  "
  register: pcs_host_auth_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all

- name: Pcs cluster setup ha_cluster
  shell: "pcs cluster setup ha_cluster  {{pacemaker_cluster_list}}  --force  "
  register: pcs_cluster_setup_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all

- name: Pcs cluster start
  shell: "pcs cluster start --all "
  register: pcs_cluster_start_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all

- name: Pcs stonith Set Disable
  shell: "pcs property set stonith-enabled=false"
  register: pcs_property_set_stonith_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all

- name: Pcs no-quorum-policy Set Ignore
  shell: "pcs property set no-quorum-policy=ignore"
  register: pcs_property_set_quorum_policy_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all


- name: Pcs Resource Create Gitlabdata
  shell: "pcs resource create Gitlabdata ocf:linbit:drbd   drbd_resource=r0_gitlab op monitor interval=30s "
  register: pcs_resource_create_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all

- name: Pcs Resource promotable Gitlabdata
  shell: "pcs resource promotable  Gitlabdata  master-max=1 master-node-max=1 clone-max=2 clone-node-max=1  notify=true"
  register: pcs_resource_promotable_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all

- name: Pcs constraint location Gitlabdata-clone
  shell: "pcs constraint location Gitlabdata-clone  prefers {{hostvars[groups['drbd_primary'][0]]['inventory_hostname']}}"
  register: pcs_resource_promotable_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all





- name: Pcs resource create GitlabFS Filesystem
  shell: "pcs resource create GitlabFS Filesystem     device='/dev/drbd1' directory='{{nfs_directory}}' fstype='xfs' "
  register: pcs_resource_create_GitlabFS_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all

- name: Pcs constraint colocation
  shell: "pcs constraint colocation add  GitlabFS with Promoted Gitlabdata-clone "
  register: pcs_resource_create_GitlabFS_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all
   
- name: Pcs constraint ordring GitlabFS with Gitlabdata-clone
  shell: "sudo pcs constraint order \
          promote Gitlabdata-clone then start GitlabFS"
  register: pcs_resource_promotable_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all



- name: Waiting for /dev/drbd1 become ready 
  ansible.builtin.wait_for:
    path: /dev/drbd1
    state: present
    timeout: 60 
    msg: Timeout to find file /dev/drbd1
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all



- name: Pcs resource create NFS Service source
  shell: "pcs resource create NFSService systemd:nfs-kernel-server op monitor interval=1min"
  register: pcs_resource_create_NFSService_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all

- name: Pcs constraint colocation NFS Service with GitlabFS
  shell: "sudo pcs  constraint colocation add NFSService with GitlabFS"
  register: pcs_resource_create_NFSService_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all


- name: Pcs constraint colocation order NFS Service then GitlabFS
  shell: "sudo pcs  constraint order GitlabFS then NFSService"
  register: pcs_resource_ordring_NFSService_msg
  when: inventory_hostname in groups["drbd_primary"]
  tags:
  - setup-all
  - install-all


- name: Ensure started and enabled a pacemaker.service Service 
  ansible.builtin.systemd:
    name:  pacemaker.service
    state: started
    enabled: true
  register: pacemaker_service_status
  ignore_errors: true
  tags:
  - setup-gitlab
  - install-gitlab

- name: Ensure started and enabled a corosync.service Service 
  ansible.builtin.systemd:
    name:  corosync.service
    state: started
    enabled: true
  register: corosync_service_status
  ignore_errors: true
  tags:
  - setup-gitlab
  - install-gitlab
