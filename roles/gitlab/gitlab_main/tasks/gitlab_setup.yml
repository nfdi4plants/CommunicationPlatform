

- name: Install the pre-reqeust packages 
  ansible.builtin.apt:
    pkg:
    - curl 
    - openssh-server 
    - ca-certificates 
    - tzdata 
    - perl
    - nfs-common
  tags:
  - setup-gitlab
  - install-gitlab


- name: Set Postfix option hostname
  debconf: 
    name=postifx 
    question="postfix/mailname" 
    value="{{ fqn_gitlab }}"
    vtype="string"
  tags:
  - setup-gitlab
  - install-gitlab

- name: Set Postfix option type as internet site
  ansible.builtin.debconf: 
    name: postfix 
    question: postfix/main_mailer_type
    value: "'Internet Site'"
    vtype: "string"
  tags:
  - setup-gitlab
  - install-gitlab
 

- name: install Postfix for Gitlab
  ansible.builtin.apt: 
    pkg:
    - postfix
  tags:
  - setup-gitlab
  - install-gitlab
  

- name: gitlab add repo script
  shell: "curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash"
  register: run_gitlab_script_db_repo
  tags:
  - setup-gitlab
  - install-gitlab


- name: Ensure the NFS mount point is ready or not
  shell: "mountpoint -q /var/opt/ "
  register: nfs_mounted
  failed_when: False
  changed_when: False
  tags:
  - setup-gitlab
  - install-gitlab


- name: Mount an NFS volume to First Gitlab server as source of sharing Gitlab Data
  ansible.posix.mount:
    src: "{{hostvars[groups['drbd_primary'][0]]['drbd_ip_address']}}:{{nfs_directory}}"
    path: /var/opt
    opts: "defaults,hard,rsize=1048576,wsize=1048576,noatime,nofail,_netdev,lookupcache=positive"
    state: ephemeral
    boot: false
    fstype: nfs
  when: 
  - inventory_hostname in groups['gitlab_servers'][0]
  - not nfs_mounted
  tags:
  - setup-gitlab
  - install-gitlab



- name: Pacemaker cluster stop for new storage configuration
  shell: "pcs cluster  stop --all"
  register: pcs_stop_new_storage
  when: inventory_hostname in groups['gitlab_servers'][0]
  ignore_errors: true
  tags:
    - new_storage

# - name: clean all the old Gitlab package
#   ansible.builtin.debug:
#     msg:  "new_storage is running."
#   tags: new_storage
 
- name: Stopped a gitlab-runsvdir Service 
  ansible.builtin.systemd:
    name:  gitlab-runsvdir.service
    state: stopped
    enabled: true
  register: gitlab_runsvdir_service_status
  ignore_errors: true
  tags:
  - setup-gitlab
  - install-gitlab

# - name: remove the old Gitlab package
#   ansible.builtin.apt:
#     pkg: 
#     - gitlab-ce
#     state: absent
#     purge: true
#   tags: new_storage
 

# - name: Delete unshared old Gitlab data from every node after installation
#   ansible.builtin.file:
#     state: absent
#     path: /var/opt/gitlab/
#   tags: new_storage

# - name: Unconditionally reboot the Gitlab VMs with all defaults
#   ansible.builtin.reboot:

# - name: Mount an NFS volume to First Gitlab server as source of sharing Gitlab Data again
#   ansible.posix.mount:
#     src: "{{hostvars[groups['drbd_primary'][0]]['drbd_ip_address']}}:{{nfs_directory}}"
#     path: /var/opt
#     opts: "defaults,hard,rsize=1048576,wsize=1048576,noatime,nofail,_netdev,lookupcache=positive"
#     state: ephemeral
#     boot: false
#     fstype: nfs
#   when: 
#   - inventory_hostname in groups['gitlab_servers'][0]
#   tags:
#   - setup-gitlab
#   - install-gitlab



- name: started a gitlab-runsvdir Service 
  ansible.builtin.systemd:
    name:  gitlab-runsvdir.service
    state: started
  register: myserviceDetails
  until: myserviceDetails.status.ActiveState == "active"
  retries: 15
  delay: 2
  ignore_errors: true
  tags:
  - setup-gitlab
  - install-gitlab


# - name: Waiting 20 sec for gitlab-runsvdir become ready 
#   ansible.builtin.wait_for:
#       delay: 20
#       timeout: 0 
#   tags:
#   - setup-all
#   - install-all

- name: Install the Gitlab package
  ansible.builtin.apt:
    pkg: 
    - gitlab-ce
  tags:
  - setup-gitlab
  - install-gitlab

  
- name: Update, and reconfigure Gitlab
  block:
  - ansible.builtin.include_tasks: "{{ role_path }}/tasks/gitlab_update.yml"
  when: 
  - gitlab_enabled | bool
  tags:
  - setup-gitlab
  - install-gitlab

  

- name: Stop and Disable a gitlab-runsvdir Service 
  ansible.builtin.systemd:
    name:  gitlab-runsvdir.service
    state: stopped
    enabled: false
  register: gitlab_runsvdir_service_status
  ignore_errors: true
  tags:
  - setup-gitlab
  - install-gitlab



- name: Unmount a mounted volume
  ansible.posix.mount:
    path: /var/opt
    state: unmounted
  when: inventory_hostname in groups['gitlab_servers'][0]
  tags:
  - setup-gitlab
  - install-gitlab


# - name: Delete unshared Gitlab data from every node after installation
#   ansible.builtin.file:
#     state: absent
#     path: /var/opt/gitlab/
#   tags:
#   - setup-gitlab
#   - install-gitlab